!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1207)}({10:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(4),s=n(5);class i{constructor(){this.dynamo=new r.a(process.env.USERS_TABLE_NAME),this.amazonConnectInstanceId=process.env.AMAZON_CONNECT_INSTANCE_ARN}getAgentByExtension(e){let t={IndexName:"AgentExtensionIndex",KeyConditionExpression:"extension = :ext",ExpressionAttributeValues:{":ext":e}};return this.dynamo.query(t).then(e=>e.length>0?new s.a(e[0]):null)}getAgentByUserId(e){let t={Key:{agentId:e}};return this.dynamo.getItem(t).then(e=>e?new s.a(e):null)}getAgents(e,t){let n={Limit:t||1e3,Select:"ALL_ATTRIBUTES"};return e&&(n.ExclusiveStartKey=JSON.parse(Buffer.from(e,"base64").toString("utf-8"))),this.dynamo.scanWithNext(n)}getAllAgents(){return this.dynamo.scan({Select:"ALL_ATTRIBUTES"})}createAgentCreateParam(e){let t={Item:{...e,agentId:e.userId}};return""===e.extension&&delete t.Item.extension,t}createAgentDeleteParam(e){return{Key:{agentId:e.userId}}}createAgent(e){let t=this.createAgentData(e);return this.dynamo.put(t)}updateAgentById(e,{extension:t,deliverSMSPhoneNumber:n,deliverSMS:r,deliverEmail:s,encryptVoicemail:i,transcribeVoicemail:a}){let o={":tv":a||!1,":ev":i||!1,":de":s,":do":{email:s,sms:{enabled:r,phoneNumber:""===n?"null":n}}};null!==t&&""!==t&&(o[":ext"]=t);let c="SET transcribeVoicemail=:tv, encryptVoicemail = :ev, deliveryEmail = :de, deliveryOptions = :do";c+=null===t||""===t?" REMOVE extension":", extension = :ext";let l={Key:{agentId:e},ExpressionAttributeValues:o,UpdateExpression:c};return this.dynamo.update(l)}batchWrite(e){return this.dynamo.batchWrite(e,0)}}},11:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));class r{constructor(e){this.globalRepo=e}getSettings(){return this.globalRepo.getGlobalSettings()}update(e,t,n,r){return this.globalRepo.updateGlobalSettings(e,t,n,r).then(e=>{console.log("Result: "+JSON.stringify(e));let{transcribeVoicemail:t,encryptVoicemail:n,deliveryEmail:r,availableSMSCountries:s}=e.Attributes;return{transcribeVoicemail:t,encryptVoicemail:n,deliveryEmail:r,availableSMSCountries:s}})}createDefault(){return this.globalRepo.createGlobalSettings(!0,!0,process.env.DELIVERY_EMAIL)}}},12:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));class r{constructor(e,t){this.userId=e.userId,this.agent=e,this.connectUser=t}}var s=n(2),i=n(5);s.a;class a extends s.a{constructor(e){super("ExtensionInUseError","Extension already in use. Please provide a different extension number.","Cannot have more than one user assigned to the extension number: "+e)}}var o=n(9),c=n.n(o);class l{constructor(e,t){this.usersRepo=t,this.connectService=e}getConnectAgentByExtension(e){return this.usersRepo.getAgentByExtension(e).then(e=>this.connectService.getConnectUser(e.userId).then(t=>new r(e,t)))}getConnectAgentByUserId(e){return this.connectService.getConnectUser(e).then(t=>this.usersRepo.getAgentByUserId(e).then(e=>new r(e,t)))}getConnectAgents(e,t){return this.usersRepo.getAgents(e,t)}syncConnectAgents(){return Promise.all([this.connectService.listConnectUsers(),this.usersRepo.getAllAgents()]).then(e=>{let[t,n]=e,r=[];if(t.forEach(e=>{const t=n.find(t=>t.userId===e.Id);let s;t&&t.username!==e.Username?(s={...t,username:e.Username},r.push({PutRequest:this.usersRepo.createAgentCreateParam(s)})):t||(s={userId:e.Id,username:e.Username},r.push({PutRequest:this.usersRepo.createAgentCreateParam(s)}))}),n.forEach(e=>{t.find(t=>t.Id===e.userId)||r.push({DeleteRequest:this.usersRepo.createAgentDeleteParam(e)})}),r.length>0)return this.usersRepo.batchWrite(r)})}updateAgentById(e,t){return this._validateAgentUpdate(e,t).then(()=>this.createAgentIfNeeded(e,t.extension)).then(()=>this.usersRepo.updateAgentById(e,t)).then(()=>this.getConnectAgentByUserId(e))}createAgentIfNeeded(e,t){let n=this.usersRepo.getAgentByUserId(e).then(n=>null===n?this.usersRepo.createAgent(i.a.create(e,t)):n);return t?this.usersRepo.getAgentByExtension(t).then(n=>{if(null!=n&&n.userId!==e)throw new a(t);return n}).then(()=>n):n}_validateAgentUpdate(e,t){return new Promise((n,r)=>{let{extension:i,deliverSMSPhoneNumber:a,deliverSMS:o,deliverEmail:l,encryptVoicemail:u,transcribeVoicemail:d}=t;if(e)if(!0!==o||void 0!==a&&""!==a){if(a){let e=new c.a(a);e.isValid()?t.deliverSMSPhoneNumber=e.getNumber():r(new s.a("InvalidPhoneNumberError","The phone number you've entered is invalid.  Please enter a valid phone number and try again.","Phone number cannot be validated for "+a))}t.hasOwnProperty("extension")&&(t.extension.length>5||Number.isNaN(t.extension))?r(new s.b("Invalid extension number","Extension number must be numeric and less than 5 digits.")):t.hasOwnProperty("extension")&&t.hasOwnProperty("deliverSMS")&&t.hasOwnProperty("deliverEmail")&&t.hasOwnProperty("transcribeVoicemail")&&t.hasOwnProperty("encryptVoicemail")?n({agentId:e,update:t}):r(new s.d)}else r(new s.b("Please provide a phone number for SMS delivery","deliverSMSPhoneNumber cannot be null or empty if deliverSMS is true"));else r(new s.c("agentId"))})}}},1207:function(e,t,n){"use strict";n.r(t);var r=n(21),s=n(27),i=n(12),a=n(13),o=n(10),c=n(22),l=n(24),u=n(25),d=n(11),h=n(14);const m=new o.a,p=new h.a,g=new d.a(p),b=new c.a(new l.a,new u.a),y=new i.a(new a.a,m),S=new r.a,v=new s.a(S,y,b,g);exports.process=async(e,t)=>{let{detail:n}=e,r=n.TranscriptionJobName,s=n.TranscriptionJobStatus;try{await v.updateVoicemailTranscriptStatus(r,s);return{lambdaResult:"Success"}}catch(e){console.trace(),console.log("Error Processing Transcript. Error: ",JSON.stringify(e,null,2))}}},13:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));class r{constructor(e,t=!0){this.userId=e.Id,this.arn=e.Arn,this.username=e.Username,t&&(this.firstName=e.IdentityInfo.FirstName,this.lastName=e.IdentityInfo.LastName,this.email=e.IdentityInfo.Email,e.hasOwnProperty("PhoneConfig")?(this.phoneType=e.PhoneConfig.PhoneType,this.autoAccept=e.PhoneConfig.AutoAccept,this.deskPhoneNumber=e.PhoneConfig.DeskPhoneNumber):(this.phoneType=null,this.autoAccept=null,this.deskPhoneNumber=null),this.directoryUserId=e.DirectoryUserId,this.routingProfileId=e.RoutingProfileId)}getFullName(){return`${this.firstName} ${this.lastName}`}}const s=n(3);class i{constructor(){this.instanceId=process.env.AMAZON_CONNECT_INSTANCE_ARN.split("/")[1],this.connect=new s.Connect,this.maxBackOffTime=45}getConnectUsers(){return this.listConnectUsers().then(e=>{let t=e.map(e=>this.getConnectUser(e.Id));return Promise.all(t)})}getConnectUser(e){return new Promise((t,n)=>{let s={InstanceId:this.instanceId,UserId:e};this.connect.describeUser(s,(e,s)=>e?(console.log("Error",e),void n(e)):s?void t(new r(s.User)):(console.log("No user found"),void n(e)))})}listConnectUsers(){return this._listConnectUsers([],null,0)}_listConnectUsers(e,t,n){let r={InstanceId:this.instanceId,MaxResults:1e3};return t&&(r.NextToken=t),this.connect.listUsers(r).promise().then(t=>{let{UserSummaryList:n,NextToken:r}=t,s=e.concat(n);return r?this._listConnectUsers(s,r,0):s}).catch(r=>{if(console.warn("list connect user failed. Retry: "+n,r),n>5)throw r;return(s=Math.min(Math.pow(n,2),this.maxBackOffTime),new Promise(e=>setTimeout(e,s))).then(()=>this._listConnectUsers(e,t,n+1));var s})}}},14:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(4);class s{constructor(e){this.transcribeVoicemail=e.transcribeVoicemail||!1,this.encryptVoicemail=e.encryptVoicemail||!1,this.deliveryEmail=e.deliveryEmail||null,this.availableSMSCountries=e.availableSMSCountries||(process.env.AVAILABLE_SMS_COUNTRIES||"").split(",")}}class i{constructor(){this.dynamo=new r.a(process.env.GLOBAL_TABLE_NAME),this.amazonConnectInstanceArn=process.env.AMAZON_CONNECT_INSTANCE_ARN}getGlobalSettings(){console.log("Getting Global Settings");let e={Key:{instanceArn:this.amazonConnectInstanceArn}};return this.dynamo.getItem(e).then(e=>e?new s(e):null)}createGlobalSettings(e,t,n,r){let i=new s({transcribeVoicemail:e,encryptVoicemail:t,deliveryEmail:n,availableSMSCountries:r});i.instanceArn=this.amazonConnectInstanceArn;let a={Item:i};return console.log("dynamo put"),this.dynamo.put(a).then(()=>i)}updateGlobalSettings(e,t,n,r){return this.getGlobalSettings().then(s=>s?this._updateGlobalSettings(e,t,n,r):(console.log("in create"),this.createGlobalSettings(e,t,n,r)))}_updateGlobalSettings(e,t,n,r){let s={Key:{instanceArn:this.amazonConnectInstanceArn},ExpressionAttributeValues:{":tv":e,":ev":t,":de":n,":ac":r},UpdateExpression:"SET transcribeVoicemail=:tv, encryptVoicemail=:ev, deliveryEmail=:de, availableSMSCountries=:ac"};return this.dynamo.update(s)}}},2:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"d",(function(){return a}));class r extends Error{constructor(e,t,n){super(),this.message=t,this.developerMessage=n,this.name=e}}class s extends r{constructor(e){super("MissingParameterError","Missing parameter","Missing parameter: "+e)}}class i extends r{constructor(e,t){super("InvalidParameterValueError",e,t)}}class a extends r{constructor(){super("MissingParametersError","One or more parameters are missing","You have one ore more parameters miss, please see documentation for more information.")}}},21:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(4);class s{constructor(){this.dynamo=new r.a(process.env.CONTACT_VOICEMAIL_TABLE_NAME)}updateTranscriptionStatus(e,t,n){let r={KeyConditionExpression:"contactId = :contactId",ExpressionAttributeValues:{":contactId":e}};return Promise.all([this.dynamo.query(r)]).then(t=>{let r=[];return t[0].map(t=>{let s={Key:{contactId:e,readerId:t.readerId},ExpressionAttributeValues:{":status":n},UpdateExpression:"SET transcribeStatus = :status"};r.push(this.dynamo.update(s))}),Promise.all(r)})}}},22:function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(23),s=n.n(r);const i=n(3);class a{constructor(e,t){this.transcribe=e,this.encrypt=t}}class o{constructor(e,t,n){this.transcription=e,this.preSignedUrl=t,this.audioFile=n}}class c{constructor(e,t){this.s3Service=e,this.transcriptionService=t,this.ses=new i.SES,this.sns=new i.SNS,this.transporter=s.a.createTransport({SES:this.ses}),this.recordingExpiration=parseInt(process.env.SIGNED_RECORDING_URL_EXP)}deliver(e,t,n){let r=this.getTranscribeAndEncryptionSettings(e,t),s=n.agent.deliveryOptions,i=s.email,a=s.sms.enabled,o=n.connectUser.email||n.connectUser.username,c=s.sms.phoneNumber,l=e.deliveryEmail;if(!l)throw"You must provide a delivery email";return i||a?i&&a?(console.log("Should Send BOTH email and SMS"),this.getDeliveryContents(r,t).then(e=>this.sendTextMessage(t,c,e).then(()=>this.sendMail(t,l,o,e)))):a&&c?(console.log("Send ONLY SMS"),this.getDeliveryContents(r,t).then(e=>this.sendTextMessage(t,c,e))):s.email?(console.log("Send ONLY Email"),this.getDeliveryContents(r,t).then(e=>this.sendMail(t,l,o,e))):Promise.resolve({message:"Undeliverable"}):(console.log("NOT sending email or sms"),Promise.resolve({message:"Not sending Email or SNS"}))}getDeliveryContents(e,t){console.log("Getting Delivery Contents");let n=Promise.resolve(null),r=Promise.resolve(null),s=Promise.resolve(null);if(e.encrypt?(console.log("Encrypt..."),r=this.s3Service.getPreSignedUrl(t.recordingBucketName,t.recordingObjectKey,this.recordingExpiration)):(console.log("Unencrypted..."),s=this.s3Service.getFile(t.recordingBucketName,t.recordingObjectKey)),e.transcribe){console.log("Transcribe...");let e=t.getTranscriptJobName();n=this.transcriptionService.getTranscriptForJobName(e)}return Promise.all([n,r,s]).then(e=>{let t=e[0],n=e[1],r=e[2];return new o(t,n,r)})}sendMail(e,t,n,r){return new Promise((s,i)=>{let a=`<p>${new Date(1e3*e.timestamp)}</p>`;if(a+=`<p>New voicemail from ${e.contactPhoneNumber}.</p>`,r.transcription&&(a+=`<b>Voicemail Transcript:</b><p>${r.transcription.transcripts[0].transcript}</p>`),a+="<b>Voicemail:</b>",r.preSignedUrl){a+=`<p>Voicemail Expiration Date: ${new Date(1e3*Math.floor(Date.now()/1e3+r.preSignedUrl.expires))}</p>`,a+=`<p><a href="${r.preSignedUrl.url}">Click Here</a> to listen to the voicemail</p>`}let o={from:t,subject:"New voicemail from "+e.contactPhoneNumber,html:a,to:n};r.audioFile&&(o.attachments=[{filename:"voicemail.wav",content:r.audioFile.Body}]),this.transporter.sendMail(o,(e,t)=>{if(e)return console.log(e),void i(e);s(t)})})}sendTextMessage(e,t,n){return new Promise((r,s)=>{let i=`Amazon Connect voicemail from ${e.contactPhoneNumber}\n`;if(n.transcription&&(i+=`\nTranscript: "${n.transcription.transcripts[0].transcript}"\n`),n.preSignedUrl){i+=`\nVoicemail Expiration Date: ${new Date(1e3*Math.floor(Date.now()/1e3+n.preSignedUrl.expires))}\n`,i+=""+n.preSignedUrl.url}let a={Message:i,PhoneNumber:t};this.sns.publish(a,(e,t)=>{e&&console.log("Error: "+e),r(t)})})}getTranscribeAndEncryptionSettings(e,t){let n=!1,r=!0;return!0===e.transcribeVoicemail&&(n=t.shouldTranscribe),!1===e.encryptVoicemail&&(r=t.shouldEncrypt),new a(n,r)}}},23:function(e,t){e.exports=require("nodemailer")},24:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));const r=n(3);class s{constructor(){this.secretsManager=new r.SecretsManager;const e=async()=>await this.secretsManager.getSecretValue({SecretId:process.env.SECRET_ARN}).promise().then(e=>e).catch(e=>(console.log("error ",e),e));(async()=>{const t=await e();if(this.isTempToken=!1,"SecretString"in t){var n=t.SecretString,s=JSON.parse(n),i=s.accessKeyId,a=s.secretAccessKey;this.s3=new r.S3({signatureVersion:"v4",credentials:{secretAccessKey:a,accessKeyId:i}})}else this.isTempToken=!0,this.s3=new r.S3})()}getFile(e,t){let n={Bucket:e,Key:t};return this.s3.getObject(n).promise()}getPreSignedUrl(e,t,n=900){return new Promise((r,s)=>{this.isTempToken?n>43200&&(console.log("Could not create a presigned URL valid for greater than 12 hours because there was an error while retrieving the IAM User Access Key credentials from the AWS Secrets Manager (please refer to CloudWatch Logs for details). So creating a presigned URL valid up to 12 hours using temporary credentials of Lambda IAM Role."),n=43200):console.log("Creating a pre-signed URL valid up to "+n+" seconds using IAM User Access Key.");let i={Bucket:e,Key:t,Expires:n};return this.s3.getSignedUrl("getObject",i,(e,t)=>{e?s(e):r({url:t,expires:n})})})}}},25:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(26),s=n.n(r);const i=n(3);class a{constructor(){this.transcribe=new i.TranscribeService}getTranscriptForJobName(e){let t={TranscriptionJobName:e};return this.transcribe.getTranscriptionJob(t).promise().then(e=>{let t={method:"GET",uri:e.TranscriptionJob.Transcript.TranscriptFileUri,json:!0};return s()(t).then(t=>({transcriptionJob:e,transcripts:t.results.transcripts||null}))}).catch(e=>{console.log(e)})}}},26:function(e,t){e.exports=require("request-promise")},27:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));class r{constructor(e){this.contactId=e.contactId,this.timestamp=e.timestamp,this.agentId=e.readerId,this.contactPhoneNumber=e.contactPhoneNumber,this.shouldTranscribe=e.shouldTranscribe||!1,this.shouldEncrypt=e.shouldEncrypt||!1,this.transcribeStatus=e.transcribeStatus,this.recordingUrl=e.recordingUrl,this.recordingBucketName=e.recordingBucketName,this.recordingObjectKey=e.recordingObjectKey,this.recordingBucketRegion=e.recordingBucketRegion}getTranscriptJobName(){return`${this.contactId}_${this.timestamp}`}}class s{constructor(e,t,n,r){this.voicemailRepo=e,this.agentService=t,this.notificationService=n,this.globalSettingsService=r}updateVoicemailTranscriptStatus(e,t){let n=e.split("_"),r=n[0],s=parseInt(n[1]);return this.voicemailRepo.updateTranscriptionStatus(r,s,t)}processVoicemailRecords(e,t,n){console.log("Processing Voicemail Recording");let s=new r(t);return"IN_PROGRESS"===new r(n).transcribeStatus&&"COMPLETED"===s.transcribeStatus||null===s.transcribeStatus||void 0===s.transcribeStatus?this._deliver(s):Promise.resolve({message:"Unhandled Resolution"})}_deliver(e){return Promise.all([this.globalSettingsService.getSettings(),this.agentService.getConnectAgentByUserId(e.agentId)]).then(t=>{let n=t[0],r=t[1];return this.notificationService.deliver(n,e,r)})}}},3:function(e,t){e.exports=require("aws-sdk")},4:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));const r=n(3);class s{constructor(e){this.tableName=e,this.client=new r.DynamoDB.DocumentClient}update(e){return e.TableName=this.tableName,e.ReturnValues="ALL_NEW",this.client.update(e).promise()}put(e){return e.TableName=this.tableName,this.client.put(e).promise()}query(e){return e.TableName=this.tableName,this.client.query(e).promise().then(e=>e.Items||null)}scan(e,t=[]){return e.TableName=this.tableName,this.client.scan(e).promise().then(n=>{let r=t;return n.Items&&(r=t.concat(n.Items)),n.LastEvaluatedKey?(console.log("Rescanning with next page"),e.ExclusiveStartKey=n.LastEvaluatedKey,this.scan(e,r)):r})}queryWithNext(e){return e.TableName=this.tableName,this.client.query(e).promise().then(e=>{let t={data:e.Items||[]};return e.LastEvaluatedKey&&(t.next=Buffer.from(JSON.stringify(e.LastEvaluatedKey),"utf8").toString("base64")),t})}scanWithNext(e){return e.TableName=this.tableName,this.client.scan(e).promise().then(e=>{let t={data:e.Items||[]};return e.LastEvaluatedKey&&(t.next=Buffer.from(JSON.stringify(e.LastEvaluatedKey),"utf8").toString("base64")),t})}getItem(e,t){return e.TableName=this.tableName,this.client.get(e).promise().then(e=>e.Item||null)}batchWrite(e,t){return new Promise((n,r)=>{this._batchWrite(e,t).then(t=>{e.length>t.index?this.batchWrite(e,t.index).then(e=>{n(e)}):n(t.data)})})}_batchWrite(e,t){return new Promise((n,r)=>{let s=e.length>t+24?t+24:e.length,i=e.slice(t,s),a={RequestItems:{[this.tableName]:i}};this.client.batchWrite(a,(e,r)=>{e&&console.log("Any error? "+JSON.stringify(e,null,2)),n({index:t+24,data:r})})})}}},5:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));class r{constructor(e){this.userId=e.userId,this.extension=e.extension,this.username=e.username,this.transcribeVoicemail=e.transcribeVoicemail||!1,this.encryptVoicemail=e.encryptVoicemail||!1,this.deliveryOptions=e.deliveryOptions||{sms:{enabled:!1,phoneNumber:null},email:!1}}static create(e,t=null){return new r({userId:e,extension:t,deliveryOptions:{sms:{enabled:!1,phoneNumber:null},email:!1}})}}},9:function(e,t){e.exports=require("awesome-phonenumber")}}));
//# sourceMappingURL=transcription.js.map