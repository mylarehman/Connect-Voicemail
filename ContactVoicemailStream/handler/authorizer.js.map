{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/auth/aws-resource-util.js","webpack:///./src/lib/auth/auth-policy.js","webpack:///./src/service/auth.service.js","webpack:///./src/handler/authorizer.js","webpack:///external \"node-jose\"","webpack:///external \"https\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AwsApiGatewayResource","resource","resourceComponents","split","apiGatewayArnTmp","this","accountId","region","restApiId","stage","apiOptions","pathComponents","AuthPolicy","principal","awsAccountId","principalId","version","pathRegex","RegExp","allowMethods","denyMethods","HttpVerb","GET","POST","PUT","PATCH","HEAD","DELETE","OPTIONS","ALL","addMethod","effect","verb","conditions","Error","test","cleanedResource","substring","length","resourceArn","toLowerCase","push","getEmptyStatement","toUpperCase","statement","Effect","Resource","getStatementsForEffect","methods","statements","curMethod","conditionalStatement","Condition","constructor","denyPolicy","context","console","log","policy","conext","denyPolicyStatementWithContext","allowAllMethods","denyAllMethods","allowMethod","denyMethod","allowMethodWithConditions","denyMethodWithConditions","build","doc","Version","Statement","concat","policyDocument","userPoolId","keysUrl","process","env","APP_REGION","authorizationToken","methodArn","Promise","resolve","reason","claims","token","trim","jwtSplit","kid","JSON","parse","util","base64url","decode","verifyKey","then","verifyAndGeneratePolicy","claimResults","username","_generate","roles","reject","response","statusCode","on","body","keys","keyIndex","error","JWK","asKey","result","JWS","createVerify","verify","payload","Math","floor","Date","exp","err","isAdmin","includes","isManager","gatewayResource","parseApiGatewayResource","policyResponse","_build","authResponse","statementOne","handler","event","callback","authService","COGNITO_USER_POOL_ID","validateAndGeneratePolicy","catch","require"],"mappings":"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","file":"authorizer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1209);\n","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                              \n *      http://www.apache.org/licenses/                                        \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                              \n******************************************************************************/\n\nclass AwsApiGatewayResource {\n    constructor(resource){\n        let resourceComponents = resource.split(':');\n        let apiGatewayArnTmp = resourceComponents[5].split('/');\n        this.accountId = resourceComponents[4];\n        this.region = resourceComponents[3];\n        this.restApiId = apiGatewayArnTmp[0];\n        this.stage = apiGatewayArnTmp[1];\n        this.apiOptions = {\n            region: this.region,\n            restApiId: this.restApiId,\n            stage: this.stage\n        };\n        this.pathComponents = apiGatewayArnTmp;\n    }\n}\n\nclass AwsResourceUtil {\n    static parseApiGatewayResource(resource) {\n        return new AwsApiGatewayResource(resource);\n    }\n}\n\nexport {AwsResourceUtil};\n","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                              \n *      http://www.apache.org/licenses/                                        \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                              \n******************************************************************************/\n\n/**\n * AuthPolicy receives a set of allowed and denied methods and generates a valid\n * AWS policy for the API Gateway authorizer. The constructor receives the calling\n * user principal, the AWS account ID of the API owner, and an apiOptions object.\n * The apiOptions can contain an API Gateway RestApi Id, a region for the RestApi, and a\n * stage that calls should be allowed/denied for. For example\n * {\n *   restApiId: \"xxxxxxxxxx\",\n *   region: \"us-east-1\",\n *   stage: \"dev\"\n * }\n *\n * let testPolicy = new AuthPolicy(\"[principal user identifier]\", \"[AWS account id]\", apiOptions);\n * testPolicy.allowMethod(AuthPolicy.HttpVerb.GET, \"/users/username\");\n * testPolicy.denyMethod(AuthPolicy.HttpVerb.POST, \"/pets\");\n * context.succeed(testPolicy.build());\n *\n * @class AuthPolicy\n * @constructor\n */\nfunction AuthPolicy(principal, awsAccountId, apiOptions) {\n    /**\n     * The AWS account id the policy will be generated for. This is used to create\n     * the method ARNs.\n     *\n     * @property awsAccountId\n     * @type {String}\n     */\n    this.awsAccountId = awsAccountId;\n\n    /**\n     * The principal used for the policy, this should be a unique identifier for\n     * the end user.\n     *\n     * @property principalId\n     * @type {String}\n     */\n    this.principalId = principal;\n\n    /**\n     * The policy version used for the evaluation. This should always be \"2012-10-17\"\n     *\n     * @property version\n     * @type {String}\n     * @default \"2012-10-17\"\n     */\n    this.version = \"2012-10-17\";\n\n    /**\n     * The regular expression used to validate resource paths for the policy\n     *\n     * @property pathRegex\n     * @type {RegExp}\n     * @default '^\\/[/.a-zA-Z0-9-\\*]+$'\n     */\n    this.pathRegex = new RegExp('^[/.a-zA-Z0-9-\\*]+$');\n\n    // these are the internal lists of allowed and denied methods. These are lists\n    // of objects and each object has 2 properties: A resource ARN and a nullable\n    // conditions statement.\n    // the build method processes these lists and generates the approriate\n    // statements for the final policy\n    this.allowMethods = [];\n    this.denyMethods = [];\n\n    if (!apiOptions || !apiOptions.restApiId) {\n        this.restApiId = \"*\";\n    } else {\n        this.restApiId = apiOptions.restApiId;\n    }\n    if (!apiOptions || !apiOptions.region) {\n        this.region = \"*\";\n    } else {\n        this.region = apiOptions.region;\n    }\n    if (!apiOptions || !apiOptions.stage) {\n        this.stage = \"*\";\n    } else {\n        this.stage = apiOptions.stage;\n    }\n}\n\n/**\n * A set of existing HTTP verbs supported by API Gateway. This property is here\n * only to avoid spelling mistakes in the policy.\n *\n * @property HttpVerb\n * @type {Object}\n */\nAuthPolicy.HttpVerb = {\n    GET     : \"GET\",\n    POST    : \"POST\",\n    PUT     : \"PUT\",\n    PATCH   : \"PATCH\",\n    HEAD    : \"HEAD\",\n    DELETE  : \"DELETE\",\n    OPTIONS : \"OPTIONS\",\n    ALL     : \"*\"\n};\n\nAuthPolicy.prototype = (function() {\n    /**\n     * Adds a method to the internal lists of allowed or denied methods. Each object in\n     * the internal list contains a resource ARN and a condition statement. The condition\n     * statement can be null.\n     *\n     * @method addMethod\n     * @param {String} effect The effect for the policy. This can only be \"Allow\" or \"Deny\".\n     * @param {String} verb The HTTP verb for the method, this should ideally come from the\n     *                 AuthPolicy.HttpVerb object to avoid spelling mistakes\n     * @param {String} resource The resource path. For example \"/pets\"\n     * @param {Object} conditions The conditions object in the format specified by the AWS docs.\n     * @return {void}\n     */\n    let addMethod = function(effect, verb, resource, conditions) {\n        if (verb !== \"*\" && !AuthPolicy.HttpVerb.hasOwnProperty(verb)) {\n            throw new Error(\"Invalid HTTP verb \" + verb + \". Allowed verbs in AuthPolicy.HttpVerb\");\n        }\n\n        if (!this.pathRegex.test(resource)) {\n            throw new Error(\"Invalid resource path: \" + resource + \". Path should match \" + this.pathRegex);\n        }\n\n        let cleanedResource = resource;\n        if (resource.substring(0, 1) === \"/\") {\n            cleanedResource = resource.substring(1, resource.length);\n        }\n        let resourceArn = \"arn:aws:execute-api:\" +\n            this.region + \":\" +\n            this.awsAccountId + \":\" +\n            this.restApiId + \"/\" +\n            this.stage + \"/\" +\n            verb + \"/\" +\n            cleanedResource;\n\n        if (effect.toLowerCase() === \"allow\") {\n            this.allowMethods.push({\n                resourceArn: resourceArn,\n                conditions: conditions\n            });\n        } else if (effect.toLowerCase() === \"deny\") {\n            this.denyMethods.push({\n                resourceArn: resourceArn,\n                conditions: conditions\n            });\n        }\n    };\n\n    /**\n     * Returns an empty statement object prepopulated with the correct action and the\n     * desired effect.\n     *\n     * @method getEmptyStatement\n     * @param {String} effect The effect of the statement, this can be \"Allow\" or \"Deny\"\n     * @return {Object} An empty statement object with the Action, Effect, and Resource\n     *                  properties prepopulated.\n     */\n    let getEmptyStatement = function(effect) {\n        effect = effect.substring(0, 1).toUpperCase() + effect.substring(1, effect.length).toLowerCase();\n        let statement = {};\n        statement.Action = \"execute-api:Invoke\";\n        statement.Effect = effect;\n        statement.Resource = [];\n\n        return statement;\n    };\n\n    let denyPolicyStatementWithContext = function(context) {\n        console.log(\"Creating deny\");\n        let policy = getEmptyStatement(\"Deny\");\n        policy.conext = {\n            ...context\n        };\n        return policy;\n    };\n\n    /**\n     * This function loops over an array of objects containing a resourceArn and\n     * conditions statement and generates the array of statements for the policy.\n     *\n     * @method getStatementsForEffect\n     * @param {String} effect The desired effect. This can be \"Allow\" or \"Deny\"\n     * @param {Array} methods An array of method objects containing the ARN of the resource\n     *                and the conditions for the policy\n     * @return {Array} an array of formatted statements for the policy.\n     */\n    let getStatementsForEffect = function(effect, methods) {\n        let statements = [];\n\n        if (methods.length > 0) {\n            let statement = getEmptyStatement(effect);\n\n            for (let i = 0; i < methods.length; i++) {\n                let curMethod = methods[i];\n                if (curMethod.conditions === null || curMethod.conditions.length === 0) {\n                    statement.Resource.push(curMethod.resourceArn);\n                } else {\n                    let conditionalStatement = getEmptyStatement(effect);\n                    conditionalStatement.Resource.push(curMethod.resourceArn);\n                    conditionalStatement.Condition = curMethod.conditions;\n                    statements.push(conditionalStatement);\n                }\n            }\n\n            if (statement.Resource !== null && statement.Resource.length > 0) {\n                statements.push(statement);\n            }\n        }\n\n        return statements;\n    };\n\n    return {\n        constructor: AuthPolicy,\n\n        denyPolicy: function(context) {\n            return denyPolicyStatementWithContext(context);\n        },\n\n        /**\n         * Adds an allow \"*\" statement to the policy.\n         *\n         * @method allowAllMethods\n         */\n        allowAllMethods: function() {\n            addMethod.call(this, \"allow\", \"*\", \"*\", null);\n        },\n\n        /**\n         * Adds a deny \"*\" statement to the policy.\n         *\n         * @method denyAllMethods\n         */\n        denyAllMethods: function() {\n            addMethod.call(this, \"deny\", \"*\", \"*\", null);\n        },\n\n        /**\n         * Adds an API Gateway method (Http verb + Resource path) to the list of allowed\n         * methods for the policy\n         *\n         * @method allowMethod\n         * @param {String} verb The HTTP verb for the method, this should ideally come from the\n         *                 AuthPolicy.HttpVerb object to avoid spelling mistakes\n         * @param {string} resource The resource path. For example \"/pets\"\n         * @return {void}\n         */\n        allowMethod: function(verb, resource) {\n            addMethod.call(this, \"allow\", verb, resource, null);\n        },\n\n        /**\n         * Adds an API Gateway method (Http verb + Resource path) to the list of denied\n         * methods for the policy\n         *\n         * @method denyMethod\n         * @param {String} verb The HTTP verb for the method, this should ideally come from the\n         *                 AuthPolicy.HttpVerb object to avoid spelling mistakes\n         * @param {string} resource The resource path. For example \"/pets\"\n         * @return {void}\n         */\n        denyMethod : function(verb, resource) {\n            addMethod.call(this, \"deny\", verb, resource, null);\n        },\n\n        /**\n         * Adds an API Gateway method (Http verb + Resource path) to the list of allowed\n         * methods and includes a condition for the policy statement. More on AWS policy\n         * conditions here: http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#Condition\n         *\n         * @method allowMethodWithConditions\n         * @param {String} verb The HTTP verb for the method, this should ideally come from the\n         *                 AuthPolicy.HttpVerb object to avoid spelling mistakes\n         * @param {string} resource The resource path. For example \"/pets\"\n         * @param {Object} conditions The conditions object in the format specified by the AWS docs\n         * @return {void}\n         */\n        allowMethodWithConditions: function(verb, resource, conditions) {\n            addMethod.call(this, \"allow\", verb, resource, conditions);\n        },\n\n        /**\n         * Adds an API Gateway method (Http verb + Resource path) to the list of denied\n         * methods and includes a condition for the policy statement. More on AWS policy\n         * conditions here: http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#Condition\n         *\n         * @method denyMethodWithConditions\n         * @param {String} verb The HTTP verb for the method, this should ideally come from the\n         *                 AuthPolicy.HttpVerb object to avoid spelling mistakes\n         * @param {string} resource The resource path. For example \"/pets\"\n         * @param {Object} conditions The conditions object in the format specified by the AWS docs\n         * @return {void}\n         */\n        denyMethodWithConditions : function(verb, resource, conditions) {\n            addMethod.call(this, \"deny\", verb, resource, conditions);\n        },\n\n        /**\n         * Generates the policy document based on the internal lists of allowed and denied\n         * conditions. This will generate a policy with two main statements for the effect:\n         * one statement for Allow and one statement for Deny.\n         * Methods that includes conditions will have their own statement in the policy.\n         *\n         * @method build\n         * @return {Object} The policy object that can be serialized to JSON.\n         */\n        build: function() {\n            if ((!this.allowMethods || this.allowMethods.length === 0) &&\n                (!this.denyMethods || this.denyMethods.length === 0)) {\n                throw new Error(\"No statements defined for the policy\");\n            }\n\n            let policy = {};\n            policy.principalId = this.principalId;\n            let doc = {};\n            doc.Version = this.version;\n            doc.Statement = [];\n\n            doc.Statement = doc.Statement.concat(getStatementsForEffect.call(this, \"Allow\", this.allowMethods));\n            doc.Statement = doc.Statement.concat(getStatementsForEffect.call(this, \"Deny\", this.denyMethods));\n\n            policy.policyDocument = doc;\n\n            return policy;\n        }\n    };\n\n})();\n\nexport {AuthPolicy};\n","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                              \n *      http://www.apache.org/licenses/                                        \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                              \n******************************************************************************/\n\nimport {AwsResourceUtil} from \"../lib/auth/aws-resource-util\";\nimport {AuthPolicy} from \"../lib/auth/auth-policy\";\nimport jose from 'node-jose';\nimport https from 'https';\n\nclass AuthService {\n\n    constructor(userPoolId) {\n        this.keysUrl = 'https://cognito-idp.' + process.env.APP_REGION + '.amazonaws.com/' + userPoolId + '/.well-known/jwks.json';\n    }\n\n    /**\n     * @param authorizationToken\n     * @param methodArn\n     * @returns {Promise<Object>|Promise<{reason: string, effect: string, claims: null}>}\n     */\n    validateAndGeneratePolicy(authorizationToken, methodArn) {\n        if (typeof authorizationToken === 'undefined') {\n            console.log(\"No Token found\");\n            return Promise.resolve({effect: 'deny', reason: 'No auth token', claims: null});\n        } else {\n            const split = authorizationToken.split('Bearer');\n            if (split.length !== 2) {\n                console.log(\"No token in Bearer\");\n                return Promise.resolve({effect: 'deny', reason: 'No token in Bearer', claims: null});\n            }\n\n            const token = split[1].trim();\n            let jwtSplit = token.split(\".\");\n            let header = JSON.parse(jose.util.base64url.decode(jwtSplit[0]));\n            let kid = header.kid;\n\n            return this.verifyKey(kid, token, this.keysUrl).then(claims => this.verifyAndGeneratePolicy(claims, methodArn));\n        }\n    }\n\n    verifyAndGeneratePolicy(claimResults, methodArn) {\n        if (!claimResults) {\n            throw 'Invalid claim';\n        }\n        let {claims, effect, reason} = claimResults;\n        let username = claims['cognito:username'];\n        if (effect) {\n            return this._generate(username, effect, methodArn, claims, {\n                reason,\n                roles: claims['custom:roles']\n            });\n        } else {\n            throw 'Invalid Token';\n        }\n    }\n\n    verifyKey(kid, token, keysUrl) {\n        return new Promise((resolve, reject) => {\n            https.get(keysUrl, response => {\n                if (response.statusCode === 200) {\n                    response.on('data', body => {\n                        let keys = JSON.parse(body)['keys'];\n                        let keyIndex = -1;\n                        for (let i = 0; i < keys.length; i++) {\n                            if (kid === keys[i].kid) {\n                                keyIndex = i;\n                                break;\n                            }\n                        }\n                        if (keyIndex === -1) {\n                            console.error(\"No public key\");\n                            resolve({effect: 'deny', reason: 'No public key', claims: null});\n                            return;\n                        }\n\n                        jose.JWK.asKey(keys[keyIndex]).then(result => {\n                            jose.JWS.createVerify(result).verify(token).then(result => {\n                                let claims = JSON.parse(result.payload);\n                                let currentTimestamp = Math.floor(new Date() / 1000);\n                                if (currentTimestamp > claims.exp) {\n                                    resolve({effect: 'deny', reason: 'Token expired', claims});\n                                    return;\n                                }\n\n                                resolve({effect: 'allow', reason: 'Verified', claims});\n                            }, error => {\n                                reject(error);\n                            });\n                        }, err => {\n                            reject(err);\n                        });\n                    });\n                } else {\n                    reject(new Error(\"Key Unverified\"));\n                }\n            });\n        });\n    }\n\n    _generate(principalId, effect, resource, claims, context = {}) {\n        let roles = claims['cognito:groups'];\n        let isAdmin = roles.includes('Admin');\n        let isManager = roles.includes('Manager');\n        let gatewayResource = AwsResourceUtil.parseApiGatewayResource(resource);\n        let policy = new AuthPolicy(principalId, gatewayResource.accountId, gatewayResource.apiOptions);\n\n        if (effect.toLowerCase() === \"allow\") {\n            if (isAdmin) {\n                policy.allowAllMethods();\n            } else if (isManager) {\n                // TODO: Allow only manager specific endpoints | policy.allowMethod(\"POST\", \"/manager/*\");\n                policy.allowAllMethods();\n            } else {\n                policy.denyAllMethods();\n            }\n\n            let policyResponse = policy.build();\n            if (context) {\n                policyResponse.context = {\n                    ...context\n                };\n            }\n            return policyResponse;\n        } else {\n            return this._build(principalId, effect, resource, claims, context);\n        }\n    }\n\n    _build(principalId, effect, resource, claims, context = {}) {\n        let authResponse = {};\n        authResponse.principalId = principalId;\n        if (effect && resource) {\n            let policyDocument = {};\n            policyDocument.Version = '2012-10-17';\n            policyDocument.Statement = [];\n            let statementOne = {};\n            statementOne.Action = 'execute-api:Invoke';\n            statementOne.Effect = effect.toLowerCase() === \"allow\" ? \"Allow\" : \"Deny\";\n            statementOne.Resource = resource;\n            policyDocument.Statement[0] = statementOne;\n            authResponse.policyDocument = policyDocument;\n        }\n\n        // Optional output with custom properties of the String, Number or Boolean type.\n        authResponse.context = {\n            ...context\n        };\n        return authResponse;\n    }\n\n}\n\nexport {AuthService};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nimport {AuthService} from \"../service/auth.service\";\n\nexports.handler = (event, context, callback) => {\n    let authService = new AuthService(process.env.COGNITO_USER_POOL_ID);\n    console.log(event.authorizationToken, event.methodArn);\n    authService.validateAndGeneratePolicy(event.authorizationToken, event.methodArn)\n        .then(policy => {\n            console.log(policy);\n            callback(null, policy);\n        })\n        .catch(err => {\n            console.log(\"Error\", err);\n            callback(`Unauthorized ${err}`);\n        });\n};","module.exports = require(\"node-jose\");","module.exports = require(\"https\");"],"sourceRoot":""}